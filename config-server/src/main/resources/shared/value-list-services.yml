## YAML Template.
info:
  component: Value List Services

# HTTP Server
server:
  port: 0   # HTTP (Tomcat) port
  
# Spring properties
spring:
  application:
     name: value-list-services  # Service registers under this name
  freemarker:
    enabled: false           # Ignore Eureka dashboard FreeMarker templates
  thymeleaf:
    cache: false             # Allow Thymeleaf templates to be reloaded at runtime
    prefix: classpath:/templates/    # Trailing / mandatory
  profiles:
    active: native   

# Discovery Server Access
eureka:    
    instance:
        lease-renewal-interval-in-seconds: 1
        prefer-ip-address: true
#   metadata-map:
#     instance-id: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
        metadata-map:
            instance-id: ${spring.application.name}:${server.port}:${random.value}}
#    metadataMap:
#     instanceId: ${spring.application.name}:${random.value}
#
#    metadataMap:
#     instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    client:
   #Indicates how often(in seconds) to fetch the registry information from the eureka server. (Default: 30)
        registry-fetch-interval-seconds: 30
   #Indicates how often(in seconds) to replicate instance changes to be replicated to the eureka server. (Default: 30)
        instance-info-replication-interval-seconds: 30
   #Indicates how long initially (in seconds) to replicate instance info to the eureka server. (Default: 40)
        initial-instance-info-replication-interval-seconds: 30
   
   #Map of availability zone to list of fully qualified URLs to communicate with eureka server. Each value can be a single URL or a comma separated list of alternative locations. Typically the eureka server URLs carry protocol,host,port,context and version information if any. 
   #Example: http://ec2-256-156-243-129.compute-1.amazonaws.com:7001/eureka/ 
   #The changes are effective at runtime at the next service url refresh cycle as specified by eurekaServiceUrlPollIntervalSeconds.
        serviceUrl:
            defaultZone: http://localhost:1111/eureka/
 
#spring.datasource.url : jdbc:mysql://localhost:3306/user
#spring.datasource.username : root
#spring.datasource.password : root
#spring.datasource.driver-class-name : com.mysql.jdbc.Driver
#spring.datasource.test-on-borrow : true
#spring.datasource.validation-query : SELECT 1

##Spring DataSource Postgres
spring.datasource.platform: postgres 
spring.datasource.url: jdbc:postgresql://localhost:5432/value-list
spring.datasource.username: postgres
spring.datasource.password: root
spring.datasource.driver-class-name: org.postgresql.Driver

#logging:
#  file: logs/${spring.application.name}.log
#  level:
#    com.netflix.discovery: 'OFF'
#    org.springframework.cloud: 'DEBUG'
#    com.atsistemas: 'DEBUG'

# ==========================================================================
# = JPA / HIBERNATE
# ==========================================================================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql: true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto: update
spring.jpa.database: POSTGRESQL 
#spring.jpa.database: MYSQL
            
# Naming strategy
spring.jpa.hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS for MySQL:MySQL5Dialect - SQLserver:SQLServerDialect
#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
                
spring.jpa.properties.hibernate.dialect.temp.use_jdbc_metadata_defaults: false
spring:
 activemq:
   broker-url: tcp://127.0.0.1:61616
   user: admin
   password: admin
#jms:
#   cache:
#       size: 10
#   clientid:
#      queue: userclientqueuemessages
#       
#mensajes:
#   queue:
#       jmssenduser: jmssenduser