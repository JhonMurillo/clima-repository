## YAML Template.
info:
  component: City Services

# HTTP Server
server:
  port: 0   # HTTP (Tomcat) port

# Spring properties
spring:
  freemarker:
    enabled: false           # Ignore Eureka dashboard FreeMarker templates
  thymeleaf:
    cache: false             # Allow Thymeleaf templates to be reloaded at runtime
    prefix: classpath:/templates/    # Trailing / mandatory
  profiles:
    active: native  
  activemq:
    broker-url: tcp://127.0.0.1:61616
    user: admin
    password: admin
    
# Discovery Server Access
eureka:
  instance:
    lease-renewal-interval-in-seconds: 1
    prefer-ip-address: true
#   metadata-map:
#     instance-id: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${random.value}}}
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    serviceUrl:
      defaultZone: http://localhost:1111/eureka/

##Spring DataSource Postgres
spring.datasource.platform: postgres 
spring.datasource.url: jdbc:postgresql://localhost:5432/city
spring.datasource.username: postgres
spring.datasource.password: root
spring.datasource.driver-class-name: org.postgresql.Driver
#logging: 
#  file: logs/${spring.application.name}.log
#  level:
#    com.netflix.discovery: 'OFF'
#    org.springframework.cloud: 'DEBUG'
#    com.atsistemas: 'DEBUG'

# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# : JPA / HIBERNATE
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql: true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto: update   
spring.jpa.database: POSTGRESQL 
#spring.jpa.database: MYSQL
            
# Naming strategy
spring.jpa.hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS for MySQL:MySQL5Dialect - SQLserver:SQLServerDialect
#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.PostgreSQL82Dialect
                
spring.jpa.properties.hibernate.dialect.temp.use_jdbc_metadata_defaults: false
jms:
   cache:
       size: 10
   clientid:
      queue: cityclientqueuemessages
      topic: cityclienttopicmessages
       
messages:
   queue:
       jmscity: jmscity
       jmsvaluelist: jmsvaluelist